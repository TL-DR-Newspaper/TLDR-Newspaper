name: Django deployment
on:
  push:
    branches: [ "main" ]
permissions:
  contents: read

env:
  AWS_REGION: eu-central-1
  AWS_LIGHTSAIL_SERVICE_NAME: tldrnews
jobs:
  buildcontainers:
    name: üåé Deploying Django
    runs-on: ubuntu-latest
    steps:
      - name: üóÇ  Getting code from Github
        uses: actions/checkout@v3
      - name: ‚öôÔ∏è  Updating to the latest versions
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
      - name: üè¢ Install Amazon Client
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install || true
          aws --version
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
          sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl
      - name: ü§ê Log in to AWS Lightsail with Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: ü§ê Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          envkey_GOPERIGON_API_KEY: ${{ secrets.GOPERIGON_API_KEY }}
          envkey_REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
          envkey_REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          envkey_REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          envkey_REDDIT_REFRESH_TOKEN: ${{ secrets.REDDIT_REFRESH_TOKEN }}
          envkey_DB_NAME: ${{ secrets.DB_NAME }}
          envkey_DB_USER: ${{ secrets.DB_USER }}
          envkey_DB_HOST: ${{ secrets.DB_HOST }}
          envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          envkey_DEBUG: False
          directory: core
          file_name: .env
          fail_on_empty: false
      - name: üê≥ Create a Docker Container for DJANGO
        run: docker build -t tldrnews:latest .
      - name: üì¨ Upload Backend image to AWS container register
        run: |
          service_name=${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}
          aws lightsail push-container-image \
            --region ${{ env.AWS_REGION }} \
            --service-name ${{ env.AWS_LIGHTSAIL_SERVICE_NAME }} \
            --label ${{ env.AWS_LIGHTSAIL_SERVICE_NAME }} \
            --image ${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}:latest
      - name: üöÄ Launching the Containers
        run: |
          aws lightsail create-container-service-deployment --service-name ${{ env.AWS_LIGHTSAIL_SERVICE_NAME }} \
          --containers file://AWS/deploymentconfig.json \
          --public-endpoint file://AWS/publicendpoint.json